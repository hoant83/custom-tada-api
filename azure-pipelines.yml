trigger:
  batch: true
  branches:
    include:
      - feature/develop-demo-4
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  isDevPR: $[eq(variables['System.PullRequest.TargetBranch'], 'feature/develop-demo-4')]
  isMasterPR: $[eq(variables['System.PullRequest.TargetBranch'], 'master')]
  isDevBuild: $[eq(variables['Build.SourceBranch'], 'refs/heads/feature/develop-demo-4')]
  isMasterBuild: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isPR: $[eq(variables['Build.Reason'], 'PullRequest')]

stages:
  - stage: Build
    condition: and(or(eq(variables.isDevPR, true), eq(variables.isMasterPR, true)), eq(variables.isPR, true))
    jobs:
      - job: All
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.15.1'
            displayName: 'Install Node.js'

          - script: |
              yarn
              yarn lint
            displayName: 'yarn install and lint'

          - script: |
              yarn build
            displayName: 'yarn build'

  - stage: Staging_Deploy
    condition: and(eq(variables.isDevBuild, true), eq(variables.isPR, false))
    jobs:
      - job: All
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.15.1'
            displayName: 'Install Node.js'

          - script: |
              yarn
              yarn lint
            displayName: 'yarn install'

          - script: |
              yarn build
            displayName: 'yarn build'

          - script: |
              yarn install --production
            displayName: 'yarn prune'

          - task: ArchiveFiles@2
            displayName: 'Zipping build folder'
            inputs:
              rootFolderOrFile: 'dist'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: 'dist.zip'
              replaceExistingArchive: true

          - task: ArchiveFiles@2
            displayName: 'Zipping node_modules folder'
            inputs:
              rootFolderOrFile: 'node_modules'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: 'node_modules.zip'
              replaceExistingArchive: true

          - task: CopyFilesOverSSH@0
            displayName: 'SSH build folder'
            inputs:
              sshEndpoint: 'netpower staging 181.173'
              contents: 'dist.zip'
              targetFolder: '/home/netpower/builds/tada-demo-4/api'
              readyTimeout: '20000'

          - task: CopyFilesOverSSH@0
            displayName: 'SSH node_modules folder'
            inputs:
              sshEndpoint: 'netpower staging 181.173'
              contents: 'node_modules.zip'
              targetFolder: '/home/netpower/builds/tada-demo-4'
              readyTimeout: '20000'

          - task: SSH@0
            displayName: 'Running deploy script on remote server'
            inputs:
              sshEndpoint: 'netpower staging 181.173'
              runOptions: 'commands'
              commands: |
                sh /home/netpower/scripts/tada-demo-4/azure-api.sh
              readyTimeout: '10000'
  # - stage: Prod_Deploy
  #   condition: and(eq(variables.isMasterBuild, true), eq(variables.isPR, false))
  #   jobs:
  #     - job: All
  #       steps:
  #         - task: NodeTool@0
  #           inputs:
  #             versionSpec: '14.15.1'
  #           displayName: 'Install Node.js'
  #         - script: |
  #             yarn
  #             yarn lint
  #           displayName: 'yarn install'
  #         - script: |
  #             yarn build
  #           displayName: 'yarn build'
  #         - script: |
  #             yarn install --production
  #           displayName: 'yarn prune'
  #         - task: ArchiveFiles@2
  #           displayName: 'Zipping build folder'
  #           inputs:
  #             rootFolderOrFile: 'dist'
  #             includeRootFolder: false
  #             archiveType: 'zip'
  #             archiveFile: 'dist.zip'
  #             replaceExistingArchive: true
  #         - task: ArchiveFiles@2
  #           displayName: 'Zipping node_modules folder'
  #           inputs:
  #             rootFolderOrFile: 'node_modules'
  #             includeRootFolder: true
  #             archiveType: 'zip'
  #             archiveFile: 'node_modules.zip'
  #             replaceExistingArchive: true
  #         - task: CopyFilesOverSSH@0
  #           displayName: 'SSH build folder deploy'
  #           inputs:
  #             sshEndpoint: '25wiz-prod'
  #             contents: 'dist.zip'
  #             targetFolder: '/home/hi5wiz/builds/hi5wiz/api'
  #             readyTimeout: '20000'
  #         - task: CopyFilesOverSSH@0
  #           displayName: 'SSH node_modules folder deploy'
  #           inputs:
  #             sshEndpoint: '25wiz-prod'
  #             contents: 'node_modules.zip'
  #             targetFolder: '/home/hi5wiz/builds/hi5wiz'
  #             readyTimeout: '20000'
  #         - task: SSH@0
  #           displayName: 'Running deploy script on remote server'
  #           inputs:
  #             sshEndpoint: '25wiz-prod'
  #             runOptions: 'commands'
  #             commands: |
  #               sh /home/hi5wiz/scripts/hi5wiz/azure-api.sh
  #             readyTimeout: '10000'
